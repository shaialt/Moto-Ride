// ◊ì◊£ ◊ë◊ô◊™ ◊í◊ú◊ô◊ú◊î ◊û◊î◊ê◊û◊¶◊¢ ◊©◊ú ◊õ◊®◊ò◊ô◊°◊ô◊ï◊™ ◊û◊™◊ó◊ú◊§◊ï◊™
document.addEventListener("DOMContentLoaded", function () {
    const wrapper = document.querySelector(".subcategory_wrapper_box");
    const content = document.querySelector(".subcategory_3d_box");
    const items = document.querySelectorAll(".subcategory");

    if (wrapper && content && items.length > 0) {
        const wrapperWidth = wrapper.clientWidth;

        // ◊û◊ï◊¶◊ê◊ô◊ù ◊ê◊™ ◊î◊ê◊ú◊û◊†◊ò ◊î◊ê◊û◊¶◊¢◊ô ◊ë◊ô◊ï◊™◊®
        const middleIndex = Math.floor(items.length / 2);
        const middleItem = items[middleIndex];

        // ◊û◊ó◊©◊ë◊ô◊ù ◊ê◊™ ◊î◊û◊ô◊ß◊ï◊ù ◊©◊ú ◊î◊ê◊ú◊û◊†◊ò ◊î◊ê◊û◊¶◊¢◊ô ◊ë◊™◊ï◊ö ◊î◊™◊ï◊õ◊ü
        const middleItemOffset = middleItem.offsetLeft + (middleItem.offsetWidth / 2);

        // ◊ß◊ï◊ë◊¢◊ô◊ù ◊ê◊™ ◊î◊í◊ú◊ô◊ú◊î ◊õ◊ö ◊©◊î◊ê◊ú◊û◊†◊ò ◊î◊ê◊û◊¶◊¢◊ô ◊ô◊î◊ô◊î ◊ë◊û◊®◊õ◊ñ
        wrapper.scrollLeft = middleItemOffset - (wrapperWidth / 2);
    }
});

// ◊§◊™◊ô◊ó◊™ ◊™◊§◊®◊ô◊ò ◊†◊ô◊ï◊ï◊ò ◊®◊ê◊©◊ô
let openMenue = document.querySelector('.right_nav_block .fa-solid');
openMenue.addEventListener('click', openMenueFunction);

function openMenueFunction (event){
    let navigation_menu = document.querySelector('.navigation_menu');
    navigation_menu.classList.toggle('navigation_menu_open_click');
    let overlay = document.querySelector('.overlay');
    overlay.style.display = 'block';
};

// ◊°◊í◊ô◊®◊™ ◊™◊§◊®◊ô◊ò ◊†◊ô◊ï◊ï◊ò ◊®◊ê◊©◊ô
let closeMenue = document.querySelector('.navigation_menu_close_button');
closeMenue.addEventListener('click', closeMenueFunction);

function closeMenueFunction (event){
    let navigation_menu = document.querySelector('.navigation_menu');
    navigation_menu.classList.toggle('navigation_menu_open_click');
    let overlay = document.querySelector('.overlay');
    overlay.style.display = 'none';
};

// ◊°◊í◊ô◊®◊™ ◊™◊§◊®◊ô◊ò ◊†◊ô◊ï◊ï◊ò ◊®◊ê◊©◊ô ◊ë◊¢◊™ ◊ú◊ó◊ô◊¶◊î ◊¢◊ú ◊ß◊ô◊©◊ï◊®
let switchPageCloseMenu = document.querySelectorAll('.navigation_menu a');
switchPageCloseMenu.forEach(item => {
    item.addEventListener('click', function(event){
        event.preventDefault();

        closeMenueFunction();

        setTimeout (() => {
            window.location.href = item.getAttribute('href');
        }, 300)

    });
});

// ◊°◊í◊ô◊®◊î ◊ï◊§◊™◊ô◊ó◊î ◊™◊§◊®◊ô◊ò ◊†◊ô◊ï◊ï◊ò ◊û◊©◊†◊ô
let changeCatalogMenu = document.querySelector('.quick_menu_filter');
changeCatalogMenu.addEventListener('click', changeCatalogMenueFunction);

function changeCatalogMenueFunction(event) {
    let catalogMenu = document.querySelector('.catalog_menu');
    catalogMenu.classList.toggle('catalog_menu_open');
    let catalogOverlay = document.querySelector('.catalog_overlay');
    let footer = document.querySelector('footer');
    let header = document.querySelector('#category_header');
    header.classList.toggle('category_header');
    let filterBoxQuery = document.querySelector('#filter_box');
    filterBoxQuery.classList.toggle('filter_box_query');
    if (catalogMenu.classList == 'catalog_menu catalog_menu_open') {
        catalogOverlay.style.display = 'block';
        footer.style.position = 'fixed';
    }
    else {
        catalogOverlay.style.display = 'none';
        footer.style.position = 'static';
    }
}

// ◊î◊õ◊†◊°◊™ ◊û◊ï◊¶◊®◊ô◊ù ◊û◊™◊ï◊ö ◊í'◊ô◊ô◊°◊ï◊ü ◊ú◊ß◊ò◊ú◊ï◊í ◊ê◊ï◊§◊†◊ï◊¢◊ô◊ù
fetch('../assets/products.json')
  .then(response => response.json())
  .then(products => {
    products.forEach(product => {
      //?: ◊ß◊®◊ô◊ê◊î ◊ú◊§◊ï◊†◊ß◊¶◊ô◊î ◊®◊ê◊©◊ô◊™ ◊ú◊ê◊ó◊® ◊ß◊ë◊ú◊™ ◊î◊™◊©◊ï◊ë◊î ◊û◊î◊©◊®◊™
      creator(product);
    });
  })
  .catch(error => console.error('Error loading JSON:', error));

//TODO: ◊§◊ï◊†◊ß◊¶◊ô◊î ◊®◊ê◊©◊ô◊™ ◊©◊ú ◊õ◊ú ◊û◊î ◊©◊§◊ï◊¢◊ú ◊ê◊ó◊®◊ô ◊ß◊ë◊ú◊™ ◊î◊†◊™◊ï◊†◊ô◊ù
function creator (product){
    //!: ◊ß◊®◊ô◊ê◊î ◊ú◊§◊ï◊†◊ß◊¶◊ô◊î ◊©◊ô◊ï◊¶◊®◊™ ◊ê◊™ ◊î◊û◊ï◊¶◊®
    createProductCardItemElement(product);

    //!: ◊î◊©◊û◊î ◊©◊ú ◊ê◊ô◊ë◊†◊ò ◊¢◊ú ◊î◊ê◊ô◊ô◊ß◊ï◊†◊ô◊ù ◊©◊ë◊™◊ï◊ö ◊î◊û◊ï◊¶◊® ◊ú◊î◊ï◊°◊§◊î ◊ú◊û◊ï◊¢◊ì◊§◊ô◊ù
    const allProducts = document.querySelectorAll('.product_super_box').forEach( product => {
    const heart = product.querySelector('.add_to_wishlist');
    if(heart)
        heart.addEventListener('click', saveToWishlist);

    const cart = product.querySelector('.add_to_cart');
    if(cart)
        cart.addEventListener('click', saveToCart);
    });

    //!: ◊ß◊®◊ô◊ê◊î ◊ú◊§◊ï◊†◊ß◊¶◊ô◊î ◊©◊û◊¢◊ì◊õ◊†◊™ ◊û◊¶◊ë ◊û◊ï◊¢◊ì◊§◊ô◊ù ◊ï◊¢◊í◊ú◊î ◊ú◊ê◊ó◊® ◊ß◊ë◊ú◊™ ◊™◊©◊ï◊ë◊î ◊û◊î◊©◊®◊™
    updateWishlistHearts();
    updatecarts();
}

//TODO: ◊¢◊ì◊õ◊ï◊ü ◊¶◊ë◊¢ ◊î◊ú◊ë◊ë◊ï◊™ ◊ú◊ê◊ó◊® ◊ô◊¶◊ô◊®◊™ ◊î◊õ◊®◊ò◊ô◊°◊ô◊ù ◊ë◊î◊™◊ê◊ù ◊ú◊ú◊ï◊ß◊ê◊ú ◊°◊ò◊ï◊®◊í
function updateWishlistHearts() {
  const wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
  wishlist.forEach(savedItem => {
    const productBox = document.getElementById(savedItem.id);
    if (productBox) {
      const heart = productBox.querySelector('.add_to_wishlist');
      if (heart) {
        heart.classList.add('add_to_wishlist_click');
      }
    }
  });
}

//TODO: ◊¢◊ì◊õ◊ï◊ü ◊¶◊ë◊¢ ◊î◊¢◊í◊ú◊ï◊™ ◊ú◊ê◊ó◊® ◊ô◊¶◊ô◊®◊™ ◊î◊õ◊®◊ò◊ô◊°◊ô◊ù ◊ë◊î◊™◊ê◊ù ◊ú◊ú◊ï◊ß◊ê◊ú ◊°◊ò◊ï◊®◊í
function updatecarts() {
  const cart = JSON.parse(localStorage.getItem('cart')) || [];
  cart.forEach(savedItem => {
    const productBox = document.getElementById(savedItem.id);
    if (productBox) {
      const cart = productBox.querySelector('.add_to_cart');
      if (cart) {
        cart.classList.add('add_to_cart_click');
      }
    }
  });
}

//TODO: ◊§◊ï◊†◊ß◊¶◊ô◊î ◊ú◊ô◊¶◊ô◊®◊™ ◊õ◊®◊ò◊ô◊°◊ô◊ï◊™ ◊û◊ï◊¶◊®
function createProductCardItemElement(product){
        //PRODUCT SUPER BOX (MAIN DIV)
        const productSuperBox = document.createElement('div');
        productSuperBox.classList.add('product_super_box');
        productSuperBox.id = product.id;
        if (product.status) {
            productSuperBox.style.setProperty(`--${product.status}`, 'true');
        }

        //BOX DIV
        const box = document.createElement('div');
        box.classList.add('box');
        const boxText = document.createElement('p');
        boxText.textContent = 'Moto & Ride üèçÔ∏è';
        box.appendChild(boxText);

        //PRODUCT BOX DIV
        const productBox = document.createElement('div');
        productBox.classList.add('product_box');

        //PRODUCT IMG DIV
        const productImgBox = document.createElement('div');
        productImgBox.classList.add('product_img_box');
        const productImg = document.createElement('img');
        productImg.src = product.image;
        productImg.classList.add('product_img');
        productImgBox.appendChild(productImg);

        //PRODUCT LOGO DIV
        const productLogoBox = document.createElement('div');
        productLogoBox.classList.add('product_logo_box');
        const productLogoImg = document.createElement('img');
        productLogoImg.src = product.logo;
        productLogoImg.classList.add('product_logo_img');

        //ICONS DIV OF PRODUCT LOGO DIV
        const iconsDiv = document.createElement('div');
        const heartIcon = document.createElement('i');
        heartIcon.classList.add('fa-solid', 'fa-heart', 'add_to_wishlist');
        const cartIcon = document.createElement('i');
        cartIcon.classList.add('fa-solid', 'fa-cart-shopping', 'add_to_cart');
        iconsDiv.appendChild(heartIcon);
        iconsDiv.appendChild(cartIcon);

        productLogoBox.appendChild(productLogoImg);
        productLogoBox.appendChild(iconsDiv);

        //CENTER DIV
        const center = document.createElement('div');
        center.classList.add('center');

        //PRODUCT NAME BOX ARTICLE OF CENTER DIV
        const productNameBox = document.createElement('article');
        productNameBox.classList.add('product_name_box');
        const productName = document.createElement('h3');
        productName.classList.add('product_name');
        productName.textContent = product.name;
        productNameBox.appendChild(productName);

        //DESCRIBE BOX ARTICLE OF CENTER DIV
        const describeBox = document.createElement('article');
        describeBox.classList.add('describe_box');
        const describe = document.createElement('p');
        describe.classList.add('describe');
        describe.textContent = product.description;
        describeBox.appendChild(describe);

        //BUY BOX ARTICLE OF CENTER DIV
        const buyBox = document.createElement('article');
        buyBox.classList.add('buy_box');
        const priceContainer = document.createElement('div');
        const originalPriceBox = document.createElement('div');
        originalPriceBox.classList.add('original_price_box');
        const originalPrice = document.createElement('h4');
        originalPrice.classList.add('original_price');
        originalPrice.textContent = product.originalPrice;
        const discount = document.createElement('p');
        discount.classList.add('discount');
        discount.textContent = product.discount;
        originalPriceBox.appendChild(originalPrice);
        originalPriceBox.appendChild(discount);
        const finalPrice = document.createElement('h2');
        finalPrice.textContent = product.finalPrice;
        priceContainer.appendChild(originalPriceBox);
        priceContainer.appendChild(finalPrice);

        //BUTTON OF BUY BOX ARTICLE OF CENTER DIV
        const productBuyButton = document.createElement('button');
        productBuyButton.classList.add('button');
        const productBuyButtonLink = document.createElement('a');
        productBuyButtonLink.href = product.buyLink;
        productBuyButtonLink.classList.add('a_button');
        const bagIcon = document.createElement('i');
        bagIcon.classList.add('fa-solid', 'fa-bag-shopping');
        productBuyButtonLink.appendChild(bagIcon);
        productBuyButton.appendChild(productBuyButtonLink);


        buyBox.appendChild(priceContainer);
        buyBox.appendChild(productBuyButton);

        //CENTER DIV BUILD
        center.appendChild(productNameBox);
        center.appendChild(describeBox);
        center.appendChild(buyBox);

        //NEW POPULAR DIV + CURVE DIV
        const newPopular = document.createElement('div');
        newPopular.classList.add('new_popular');
        const curve = document.createElement('div');
        curve.classList.add('curve');

        //PRODUCT BOX DIV BUILD
        productBox.appendChild(productImgBox);
        productBox.appendChild(productLogoBox);
        productBox.appendChild(center);
        productBox.appendChild(newPopular);
        productBox.appendChild(curve);

        //PRODUCT SUPER BOX BUILD
        productSuperBox.appendChild(box);
        productSuperBox.appendChild(productBox);

        if (product.category == 'motorcycles'){
            const container = document.querySelector('#motorcycles_catalog');
            if(container)
                container.appendChild(productSuperBox);
        }

    
        if (product.category == 'gear & protection'){
            const container = document.querySelector('#gear_&_protection');
            if(container)
                container.appendChild(productSuperBox);
        }

        if (product.category == 'parts & accessories'){
            const container = document.querySelector('#parts_&_accessories');
            if(container)
                container.appendChild(productSuperBox);
        }

        if (product.category == 'upgrades'){
            const container = document.querySelector('#upgrades');
            if(container)
                container.appendChild(productSuperBox);
        }
}

//TODO: ◊§◊ï◊†◊ß◊¶◊ô◊î ◊©◊©◊ï◊û◊®◊™ ◊ë◊ñ◊ô◊õ◊®◊ï◊ü ◊ê◊™ ◊§◊®◊ò◊ô ◊î◊û◊ï◊¶◊® ◊î◊†◊ë◊ó◊® ◊ú◊¢◊í◊ú◊î ◊ï◊¶◊ï◊ë◊¢◊™ ◊ë◊ê◊ì◊ï◊ù ◊ê◊™ ◊î◊ú◊ë
function saveToWishlist(event){
    // ◊©◊ô◊†◊ï◊ô ◊û◊¶◊ë ◊î◊ú◊ë ◊ë◊ß◊ò◊ú◊ï◊í ◊©◊ú ◊î◊ï◊°◊§◊î ◊ï◊î◊°◊®◊î ◊©◊ú ◊î◊û◊ï◊¶◊®
    const heartIconClick = event.currentTarget;
    heartIconClick.classList.toggle('add_to_wishlist_click');

    // ◊û◊¶◊ô◊ê◊™ ◊õ◊®◊ò◊ô◊° ◊î◊û◊ï◊¶◊®
    const productBox = heartIconClick.closest('.product_super_box');
    if (!productBox) return;

    // ◊©◊ú◊ô◊§◊™ ◊†◊™◊ï◊†◊ô◊ù ◊û◊™◊ï◊ö ◊î◊õ◊®◊ò◊ô◊° ◊î◊†◊ë◊ó◊®
    const productId = productBox.id;
    const name = productBox.querySelector('.product_name')?.textContent.trim();
    const description = productBox.querySelector('.describe')?.textContent.trim();
    const image = productBox.querySelector('.product_img')?.src;
    const logo = productBox.querySelector('.product_logo_img')?.src;
    const originalPrice = productBox.querySelector('.original_price')?.textContent.trim();
    const discount = productBox.querySelector('.discount')?.textContent.trim();
    const finalPrice = productBox.querySelector('h2')?.textContent.trim();
    const buyLink = productBox.querySelector('.a_button')?.href;

    if (!productId || !name) return;

    // ◊û◊ë◊†◊î ◊î◊†◊™◊ï◊†◊ô◊ù ◊ú◊©◊û◊ô◊®◊î
    const productData = {
        id: productId,
        name,
        description,
        image,
        logo,
        originalPrice,
        discount,
        finalPrice,
        buyLink
    };

    let wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];

    const existingIndex = wishlist.findIndex(item => item.id === productId);

    if (heartIconClick.classList.contains('add_to_wishlist_click')) {
        if (existingIndex === -1) {
            wishlist.push(productData);
        }
    } 
    
    else {
        if (existingIndex !== -1) {
            wishlist.splice(existingIndex, 1);
        }
    }

    localStorage.setItem('wishlist', JSON.stringify(wishlist));
}

//TODO: ◊§◊ï◊†◊ß◊¶◊ô◊î ◊©◊©◊ï◊û◊®◊™ ◊ë◊ñ◊ô◊õ◊®◊ï◊ü ◊ê◊™ ◊§◊®◊ò◊ô ◊î◊û◊ï◊¶◊® ◊î◊†◊ë◊ó◊® ◊ú◊û◊ï◊¢◊ì◊§◊ô◊ù ◊ï◊¶◊ï◊ë◊¢◊™ ◊ë◊ê◊ì◊ï◊ù ◊ê◊™ ◊î◊¢◊í◊ú◊î
function saveToCart(event){
    // ◊©◊ô◊†◊ï◊ô ◊û◊¶◊ë ◊î◊ú◊ë ◊ë◊ß◊ò◊ú◊ï◊í ◊©◊ú ◊î◊ï◊°◊§◊î ◊ï◊î◊°◊®◊î ◊©◊ú ◊î◊û◊ï◊¶◊®
    const cartIconClick = event.currentTarget;
    cartIconClick.classList.toggle('add_to_cart_click');

    // ◊û◊¶◊ô◊ê◊™ ◊õ◊®◊ò◊ô◊° ◊î◊û◊ï◊¶◊®
    const productBox = cartIconClick.closest('.product_super_box');
    if (!productBox) return;

    // ◊©◊ú◊ô◊§◊™ ◊†◊™◊ï◊†◊ô◊ù ◊û◊™◊ï◊ö ◊î◊õ◊®◊ò◊ô◊° ◊î◊†◊ë◊ó◊®
    const productId = productBox.id;
    const name = productBox.querySelector('.product_name')?.textContent.trim();
    const description = productBox.querySelector('.describe')?.textContent.trim();
    const image = productBox.querySelector('.product_img')?.src;
    const logo = productBox.querySelector('.product_logo_img')?.src;
    const originalPrice = productBox.querySelector('.original_price')?.textContent.trim();
    const discount = productBox.querySelector('.discount')?.textContent.trim();
    const finalPrice = productBox.querySelector('h2')?.textContent.trim();
    const buyLink = productBox.querySelector('.a_button')?.href;

    if (!productId || !name) return;

    // ◊û◊ë◊†◊î ◊î◊†◊™◊ï◊†◊ô◊ù ◊ú◊©◊û◊ô◊®◊î
    const productData = {
        id: productId,
        name,
        description,
        image,
        logo,
        originalPrice,
        discount,
        finalPrice,
        buyLink
    };

    let cart = JSON.parse(localStorage.getItem('cart')) || [];

    const existingIndex = cart.findIndex(item => item.id === productId);

    if (cartIconClick.classList.contains('add_to_cart_click')) {
        if (existingIndex === -1) {
            cart.push(productData);
        }
    } 
    
    else {
        if (existingIndex !== -1) {
            cart.splice(existingIndex, 1);
        }
    }

    localStorage.setItem('cart', JSON.stringify(cart));
}

//TODO: ◊§◊ï◊†◊ß◊¶◊ô◊î ◊ú◊ô◊¶◊ô◊®◊™ ◊õ◊®◊ò◊ô◊°◊ô◊ï◊™ ◊û◊ï◊¶◊® ◊ú◊û◊ï◊¢◊ì◊§◊ô◊ù
function createWishlistItemElement(event) {
    // ◊ô◊¶◊ô◊®◊™ ◊§◊®◊ô◊ò ◊®◊©◊ô◊û◊î
    const wishlistListItem = document.createElement('li');

    // ◊ô◊¶◊ô◊®◊™ ◊ß◊ï◊§◊°◊î ◊õ◊ï◊ú◊ú◊™ ◊ú◊§◊®◊ô◊ò wishlist
    const wishlistProductWrapper = document.createElement('div');
    wishlistProductWrapper.classList.add('wish_chosen_product_list');

    // ◊ô◊¶◊ô◊®◊™ ◊ê◊ô◊ô◊ß◊ï◊ü ◊ú◊ë ◊ú◊î◊°◊®◊™ ◊§◊®◊ô◊ò ◊û◊î÷æwishlist
    const wishlistDeleteIcon = document.createElement('i');
    wishlistDeleteIcon.classList.add('wish_delete', 'fa-solid', 'fa-heart');

    // ◊ß◊ï◊§◊°◊î ◊ú◊™◊û◊ï◊†◊î
    const wishlistImageBox = document.createElement('div');
    wishlistImageBox.classList.add('wish_chosen_product_img_box');

    // ◊ß◊ô◊©◊ï◊® ◊ú◊™◊û◊ï◊†◊î
    const wishlistImageLink = document.createElement('a');
    wishlistImageLink.href = '../motorcycle catalog/motorcycles.html#6';

    // ◊ô◊¶◊ô◊®◊™ ◊î◊™◊û◊ï◊†◊î
    const wishlistImage = document.createElement('img');
    wishlistImage.src = '../images/product/kawasaki product/h2 sx.png';
    wishlistImage.alt = '';

    // ◊ß◊ï◊§◊°◊î ◊ú◊û◊ô◊ì◊¢ ◊¢◊ú ◊î◊û◊ï◊¶◊®
    const wishlistContentBox = document.createElement('article');
    wishlistContentBox.classList.add('wish_chosen_product_content_box');

    // ◊ß◊ï◊§◊°◊î ◊ú◊û◊ó◊ô◊®
    const wishlistPriceBox = document.createElement('div');
    wishlistPriceBox.classList.add('wish_chosen_product_price');

    // ◊ß◊ï◊§◊°◊î ◊ú◊û◊ó◊ô◊® ◊î◊û◊ß◊ï◊®◊ô ◊ï◊î◊î◊†◊ó◊î
    const wishlistOriginalPriceBox = document.createElement('div');
    wishlistOriginalPriceBox.classList.add('original_price_box');
    const wishlistOriginalPrice = document.createElement('h4');
    wishlistOriginalPrice.classList.add('original_price');
    wishlistOriginalPrice.textContent = '29,642.47 $';
    const wishlistDiscount = document.createElement('p');
    wishlistDiscount.classList.add('discount');
    wishlistDiscount.textContent = '-10%';
    const wishlistFinalPrice = document.createElement('h2');
    wishlistFinalPrice.textContent = '26,678.22 $';

    // ◊ß◊ï◊§◊°◊î ◊ú◊©◊ù ◊ï◊™◊ô◊ê◊ï◊® ◊î◊û◊ï◊¶◊®
    const wishlistTitleBox = document.createElement('div');
    wishlistTitleBox.classList.add('wish_product_title');
    const wishlistProductName = document.createElement('h3');
    wishlistProductName.classList.add('wish_product_name');
    wishlistProductName.textContent = 'Ninja h2 sx';
    const wishlistDescription = document.createElement('p');
    wishlistDescription.classList.add('wish_describe');
    wishlistDescription.textContent = 'A high-performance sport bike from Kawasaki, featuring a 998cc supercharged engine that';

    // ◊ß◊ï◊§◊°◊î ◊ú◊õ◊§◊™◊ï◊®◊ô◊ù
    const wishlistButtonsBox = document.createElement('div');
    wishlistButtonsBox.classList.add('wish_product_buttons');
    const wishlistAddToCartButton = document.createElement('button');
    wishlistAddToCartButton.textContent = 'Add to cart';
    const wishlistBuyNowButton = document.createElement('button');
    wishlistBuyNowButton.textContent = 'Buy now';

    // ◊î◊®◊õ◊ë◊™ ◊î◊™◊û◊ï◊†◊î
    wishlistImageLink.appendChild(wishlistImage);
    wishlistImageBox.appendChild(wishlistImageLink);

    // ◊î◊®◊õ◊ë◊™ ◊™◊ô◊ë◊™ ◊î◊û◊ó◊ô◊®
    wishlistOriginalPriceBox.appendChild(wishlistOriginalPrice);
    wishlistOriginalPriceBox.appendChild(wishlistDiscount);
    wishlistPriceBox.appendChild(wishlistOriginalPriceBox);
    wishlistPriceBox.appendChild(wishlistFinalPrice);

    // ◊î◊®◊õ◊ë◊™ ◊™◊ô◊ë◊™ ◊î◊õ◊ï◊™◊®◊™
    wishlistTitleBox.appendChild(wishlistProductName);
    wishlistTitleBox.appendChild(wishlistDescription);

    // ◊î◊®◊õ◊ë◊™ ◊õ◊§◊™◊ï◊®◊ô◊ù
    wishlistButtonsBox.appendChild(wishlistAddToCartButton);
    wishlistButtonsBox.appendChild(wishlistBuyNowButton);

    // ◊î◊®◊õ◊ë◊™ ◊™◊ô◊ë◊™ ◊î◊™◊ï◊õ◊ü
    wishlistContentBox.appendChild(wishlistPriceBox);
    wishlistContentBox.appendChild(wishlistTitleBox);
    wishlistContentBox.appendChild(wishlistButtonsBox);

    // ◊î◊®◊õ◊ë◊™ ◊î◊õ◊ú ◊ú◊™◊ï◊ö ◊î◊ß◊ï◊§◊°◊î ◊î◊®◊ê◊©◊ô◊™
    wishlistProductWrapper.appendChild(wishlistDeleteIcon);
    wishlistProductWrapper.appendChild(wishlistImageBox);
    wishlistProductWrapper.appendChild(wishlistContentBox);

    // ◊î◊õ◊†◊°◊™ ◊î◊õ◊ú ◊ú÷æli
    wishlistListItem.appendChild(wishlistProductWrapper);

    // ◊î◊õ◊†◊°◊™ ◊õ◊®◊ò◊ô◊° ◊û◊ï◊¢◊ì◊§◊ô◊ù ◊ú◊™◊ï◊ö ◊î◊ì◊ï◊ù

     
}

//TODO: ◊§◊ï◊†◊ß◊¶◊ô◊î ◊ú◊ë◊†◊ô◊ô◊™ ◊§◊®◊ô◊ò ◊¢◊í◊ú◊î ◊ó◊ì◊©
function createCartItemElement(product) {
    // ◊ô◊¶◊ô◊®◊™ ◊™◊ô◊ë◊™ <li> ◊©◊™◊õ◊ô◊ú ◊ê◊™ ◊î◊û◊ï◊¶◊®
    const listItem = document.createElement('li');

    // ◊ô◊¶◊ô◊®◊™ ◊™◊ô◊ë◊™ ◊î◊û◊ï◊¶◊® ◊î◊õ◊ú◊ú◊ô◊™ ◊ë◊¢◊í◊ú◊î
    const cartProductBox = document.createElement('div');
    cartProductBox.classList.add('chosen_product_list');

    // ◊ô◊¶◊ô◊®◊™ ◊õ◊§◊™◊ï◊® ◊û◊ó◊ô◊ß◊™ ◊û◊ï◊¶◊® ◊û◊î◊¢◊í◊ú◊î
    const deleteIcon = document.createElement('i');
    deleteIcon.classList.add('delete_product', 'fa-solid', 'fa-xmark');

    // ◊ô◊¶◊ô◊®◊™ ◊™◊ô◊ë◊™ ◊™◊û◊ï◊†◊™ ◊î◊û◊ï◊¶◊®
    const imageBox = document.createElement('div');
    imageBox.classList.add('chosen_product_img_box');

    // ◊ô◊¶◊ô◊®◊™ ◊ß◊ô◊©◊ï◊® ◊ú◊ì◊£ ◊®◊õ◊ô◊©◊î ◊ê◊ï ◊û◊ô◊ì◊¢ ◊†◊ï◊°◊£
    const productLink = document.createElement('a');
    productLink.href = product.buyLink || '#'; // ◊ë◊û◊ô◊ì◊î ◊ï◊ê◊ô◊ü ◊ß◊ô◊©◊ï◊®, ◊û◊ï◊†◊¢ ◊©◊ë◊ô◊®◊î

    // ◊ô◊¶◊ô◊®◊™ ◊™◊û◊ï◊†◊™ ◊î◊û◊ï◊¶◊®
    const productImage = document.createElement('img');
    productImage.src = product.image;
    productImage.alt = product.name;

    // ◊ó◊ô◊ë◊ï◊® ◊î◊™◊û◊ï◊†◊î ◊ú◊ß◊ô◊©◊ï◊® ◊ï◊î◊™◊ô◊ë◊î
    productLink.appendChild(productImage);
    imageBox.appendChild(productLink);

    // ◊ô◊¶◊ô◊®◊™ ◊®◊©◊ô◊û◊™ ◊§◊®◊ò◊ô ◊î◊û◊ï◊¶◊® (◊©◊ù, ◊û◊ó◊ô◊®, ◊õ◊û◊ï◊™, ◊û◊ó◊ô◊® ◊õ◊ï◊ú◊ú)
    const detailsList = document.createElement('ul');

    // ◊©◊ù ◊î◊û◊ï◊¶◊®
    const nameItem = document.createElement('li');
    nameItem.textContent = product.name;

    // ◊û◊ó◊ô◊® ◊ú◊ô◊ó◊ô◊ì◊î
    const pricePerItem = document.createElement('li');
    pricePerItem.textContent = `${product.finalPrice} $`;

    // ◊™◊ô◊ë◊™ ◊õ◊û◊ï◊™ ◊ú◊ë◊ó◊ô◊®◊™ ◊û◊°◊§◊® ◊ô◊ó◊ô◊ì◊ï◊™
    const quantityItem = document.createElement('li');
    const quantityInput = document.createElement('input');
    quantityInput.type = 'number';
    quantityInput.value = product.quantity || 1; // ◊ê◊ù ◊ê◊ô◊ü ◊õ◊û◊ï◊™, ◊©◊ô◊ù 1 ◊õ◊ë◊®◊ô◊®◊™ ◊û◊ó◊ì◊ú
    quantityInput.min = 1;
    quantityInput.classList.add('chosen_product_input');
    quantityItem.appendChild(quantityInput);

    // ◊û◊ó◊ô◊® ◊õ◊ï◊ú◊ú (◊û◊ó◊ô◊® ◊ú◊ô◊ó◊ô◊ì◊î * ◊õ◊û◊ï◊™)
    const totalItem = document.createElement('li');
    const totalPrice = (parseFloat(product.finalPrice) * (product.quantity || 1)).toFixed(2);
    totalItem.textContent = `${totalPrice} $`;

    // ◊ó◊ô◊ë◊ï◊® ◊õ◊ú ◊©◊ï◊®◊ï◊™ ◊î◊û◊ô◊ì◊¢ ◊ú◊®◊©◊ô◊û◊î
    detailsList.appendChild(nameItem);
    detailsList.appendChild(pricePerItem);
    detailsList.appendChild(quantityItem);
    detailsList.appendChild(totalItem);

    // ◊ó◊ô◊ë◊ï◊® ◊ê◊ô◊ô◊ß◊ï◊ü ◊î◊û◊ó◊ô◊ß◊î, ◊î◊™◊û◊ï◊†◊î ◊ï◊î◊®◊©◊ô◊û◊î ◊ú◊ß◊ï◊§◊°◊î ◊î◊®◊ê◊©◊ô◊™
    cartProductBox.appendChild(deleteIcon);
    cartProductBox.appendChild(imageBox);
    cartProductBox.appendChild(detailsList);

    // ◊î◊ï◊°◊§◊™ ◊î◊ß◊ï◊§◊°◊î ◊ú÷æ<li>
    listItem.appendChild(cartProductBox);

}



